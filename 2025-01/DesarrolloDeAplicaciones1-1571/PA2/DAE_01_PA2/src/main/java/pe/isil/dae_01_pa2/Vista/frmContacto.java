/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pe.isil.dae_01_pa2.Vista;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import pe.isil.dae_01_pa2.LogicaNegocio.LN_Contacto;
import pe.isil.dae_01_pa2.Modelo.Contacto;

/**
 *
 * @author chris
 */
public class frmContacto extends javax.swing.JFrame {

    /**
     * Creates new form frmContacto
     */
    public frmContacto() {
        initComponents();
        actualizarEstadoBotones(false);
        configurarSeleccionTabla(); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtIdSearch = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtNombres = new javax.swing.JTextField();
        txtEmpresa = new javax.swing.JTextField();
        txtCorreo = new javax.swing.JTextField();
        txtDireccion = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtApellidos = new javax.swing.JTextField();
        txtTelefono = new javax.swing.JTextField();
        txtCumpleaños = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblContactos = new javax.swing.JTable();
        btnBuscar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        btnLimpiar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Buscar por Id");

        jLabel2.setText("Id");

        txtId.setEditable(false);
        txtId.setToolTipText("");

        jLabel3.setText("Nombres");

        jLabel4.setText("Empresa");

        jLabel5.setText("Correo");

        jLabel6.setText("Direccion");

        jLabel7.setText("Apellidos");

        jLabel8.setText("Teléfono");

        jLabel9.setText("Cumpleaños");

        tblContactos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Nombres", "Apellidos", "Empresa", "Teléfono", "Correo", "Cumpleaños", "Dirección"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblContactos);

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel10.setText("Formulario CRUD de contactos");

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(305, 305, 305))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator2)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtIdSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnBuscar)
                                    .addGap(149, 149, 149)
                                    .addComponent(btnEliminar)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnActualizar)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnGuardar))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel6))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(39, 39, 39)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel9)
                                                    .addComponent(jLabel7))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(txtTelefono)
                                                    .addComponent(txtApellidos)
                                                    .addComponent(txtCumpleaños, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 723, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(btnLimpiar))))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 791, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addGap(52, 52, 52))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(btnLimpiar))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCumpleaños, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtIdSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar)
                    .addComponent(btnGuardar)
                    .addComponent(btnActualizar)
                    .addComponent(btnEliminar))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private boolean validarEntradas() {
        if (txtNombres.getText().isBlank()) {
            JOptionPane.showMessageDialog(this, "Ingrese nombres");
            txtNombres.requestFocus();
            return false;
        }
        if (txtApellidos.getText().isBlank()) {
            JOptionPane.showMessageDialog(this, "Ingrese apellidos");
            txtApellidos.requestFocus();
            return false;
        }
        if (txtCorreo.getText().isBlank()) {
            JOptionPane.showMessageDialog(this, "Ingrese correo");
            txtCorreo.requestFocus();
            return false;
        }
        // Aquí puedes agregar más validaciones según necesites
        return true;
    }

    private void limpiarCampos() {
        txtId.setText("");
        txtNombres.setText("");
        txtApellidos.setText("");
        txtEmpresa.setText("");
        txtTelefono.setText("");
        txtCorreo.setText("");
        txtCumpleaños.setText("");
        txtDireccion.setText("");
        txtIdSearch.setText("");
    }

    public void cargarTabla() {
        // Aquí cargas la tabla con todos los contactos, ejemplo:
        LN_Contacto ln = new LN_Contacto();
        ArrayList<Contacto> lista = ln.getAll();

        DefaultTableModel modelo = (DefaultTableModel) tblContactos.getModel();
        modelo.setRowCount(0);

        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");

        for (Contacto c : lista) {
            modelo.addRow(new Object[] {
                c.getId(),
                c.getNombres(),
                c.getApellidos(),
                c.getEmpresa(),
                c.getTelefono(),
                c.getCorreo(),
                sdf.format(c.getCumpleaños()),
                c.getDireccion()
            });
        }
    }
    

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed

        if(txtIdSearch.getText().isBlank() || txtIdSearch.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Ingrese un Id a buscar");
            txtIdSearch.requestFocus();
            return;
        }
        int id;
        try {
            id = Integer.parseInt(txtIdSearch.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Ingrese un valor numérico válido");
            txtIdSearch.requestFocus();
            return;
        }
        if(id <= 0) {
            JOptionPane.showMessageDialog(null, "Ingrese un valor numérico mayor a cero");
            txtIdSearch.requestFocus();
            return;
        }

        LN_Contacto ln_contacto = new LN_Contacto();
        Contacto contacto = ln_contacto.getById(id);

        if(contacto == null) {
            JOptionPane.showMessageDialog(null, "No se encontró contacto con Id: " + id);
            return;
        }

        // Llenar los demás campos con la información encontrada
        txtId.setText(contacto.getId().toString());
        txtNombres.setText(contacto.getNombres());
        txtApellidos.setText(contacto.getApellidos());
        txtEmpresa.setText(contacto.getEmpresa());
        txtTelefono.setText(contacto.getTelefono());
        txtCorreo.setText(contacto.getCorreo());
        if(contacto.getCumpleaños() != null) {
            txtCumpleaños.setText(new SimpleDateFormat("yyyy-MM-dd").format(contacto.getCumpleaños()));
        } else {
            txtCumpleaños.setText("");
        }
        txtDireccion.setText(contacto.getDireccion());
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        String idStr = txtId.getText();
        if (idStr.isBlank()) {
            JOptionPane.showMessageDialog(this, "Ingrese un ID para actualizar");
            txtId.requestFocus();
            return;
        }

        int id;
        try {
            id = Integer.parseInt(idStr);
            if (id <= 0) throw new NumberFormatException();
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "ID inválido");
            txtId.requestFocus();
            return;
        }

        if (!validarEntradas()) return;

        Contacto contacto = new Contacto();
        contacto.setId(id);
        contacto.setNombres(txtNombres.getText());
        contacto.setApellidos(txtApellidos.getText());
        contacto.setEmpresa(txtEmpresa.getText());
        contacto.setTelefono(txtTelefono.getText());
        contacto.setCorreo(txtCorreo.getText());
        contacto.setDireccion(txtDireccion.getText());

        try {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            contacto.setCumpleaños(sdf.parse(txtCumpleaños.getText()));
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(this, "Formato de fecha inválido. Use yyyy-MM-dd");
            txtCumpleaños.requestFocus();
            return;
        }

        LN_Contacto ln = new LN_Contacto();
        if (ln.update(contacto)) {
            JOptionPane.showMessageDialog(this, "Contacto actualizado correctamente");
            limpiarCampos();
            cargarTabla();
        } else {
            JOptionPane.showMessageDialog(this, "Error al actualizar contacto");
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed

        if(txtIdSearch.getText().isBlank() || txtIdSearch.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Ingrese un Id para eliminar");
            txtIdSearch.requestFocus();
            return;
        }
        int id;
        try {
            id = Integer.parseInt(txtIdSearch.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Ingrese un valor numérico válido");
            txtIdSearch.requestFocus();
            return;
        }
        if(id <= 0) {
            JOptionPane.showMessageDialog(null, "Ingrese un valor numérico mayor a cero");
            txtIdSearch.requestFocus();
            return;
        }

        LN_Contacto ln_contacto = new LN_Contacto();
        Contacto contacto = ln_contacto.getById(id);

        if(contacto == null) {
            JOptionPane.showMessageDialog(null, "No se encontró contacto con Id: " + id);
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(null,
            "¿Estás seguro que deseas eliminar este contacto?\n" +
            contacto.getNombres() + " " + contacto.getApellidos(),
            "Confirmar eliminación",
            JOptionPane.YES_NO_OPTION);

        if(confirm == JOptionPane.YES_OPTION) {
            boolean eliminado = ln_contacto.delete(id);
            if(eliminado) {
                JOptionPane.showMessageDialog(null, "Contacto eliminado correctamente.");
                limpiarCampos();  // O el método que uses para limpiar campos
                cargarTabla();           // Recargar la tabla si tienes
            } else {
                JOptionPane.showMessageDialog(null, "No se pudo eliminar el contacto.");
            }
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        if (!validarEntradas()) return;

        Contacto contacto = new Contacto();
        contacto.setNombres(txtNombres.getText());
        contacto.setApellidos(txtApellidos.getText());
        contacto.setEmpresa(txtEmpresa.getText());
        contacto.setTelefono(txtTelefono.getText());
        contacto.setCorreo(txtCorreo.getText());
        contacto.setDireccion(txtDireccion.getText());

        try {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            contacto.setCumpleaños(sdf.parse(txtCumpleaños.getText()));
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(this, "Formato de fecha inválido. Use yyyy-MM-dd");
            txtCumpleaños.requestFocus();
            return;
        }

        LN_Contacto ln = new LN_Contacto();
        if (ln.add(contacto)) {
            JOptionPane.showMessageDialog(this, "Contacto guardado correctamente");
            limpiarCampos();
            cargarTabla();
        } else {
            JOptionPane.showMessageDialog(this, "Error al guardar contacto");
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        limpiarCampos();
        actualizarEstadoBotones(false);
    }//GEN-LAST:event_btnLimpiarActionPerformed
    
    private void actualizarEstadoBotones(boolean contactoExiste) {
        btnEliminar.setEnabled(contactoExiste);
        btnActualizar.setEnabled(contactoExiste);
        btnGuardar.setEnabled(!contactoExiste);
    }
    
    private void configurarSeleccionTabla() {
        tblContactos.getSelectionModel().addListSelectionListener(e -> {
            if (!e.getValueIsAdjusting()) {
                seleccionarContactoDesdeTabla();
            }
        });
    }

    private void seleccionarContactoDesdeTabla() {
        int fila = tblContactos.getSelectedRow();
        if (fila >= 0) {
            int filaModelo = tblContactos.convertRowIndexToModel(fila);
            DefaultTableModel modelo = (DefaultTableModel) tblContactos.getModel();

            Integer id = Integer.parseInt(modelo.getValueAt(filaModelo, 0).toString());
            String nombres = modelo.getValueAt(filaModelo, 1).toString();
            String apellidos = modelo.getValueAt(filaModelo, 2).toString();
            String empresa = modelo.getValueAt(filaModelo, 3).toString();
            String telefono = modelo.getValueAt(filaModelo, 4).toString();
            String correo = modelo.getValueAt(filaModelo, 5).toString();
            String fechaStr = modelo.getValueAt(filaModelo, 6).toString();
            Date cumpleaños = null;
            try {
                cumpleaños = new SimpleDateFormat("yyyy-MM-dd").parse(fechaStr);
                txtCumpleaños.setText(new SimpleDateFormat("yyyy-MM-dd").format(cumpleaños));
            } catch (ParseException ex) {
                txtCumpleaños.setText(""); // si hay error, lo dejamos vacío
            }
            String direccion = modelo.getValueAt(filaModelo, 7).toString();

            txtId.setText(id.toString());
            txtNombres.setText(nombres);
            txtApellidos.setText(apellidos);
            txtEmpresa.setText(empresa);
            txtTelefono.setText(telefono);
            txtCorreo.setText(correo);

            txtDireccion.setText(direccion);

            actualizarEstadoBotones(true);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmContacto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmContacto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmContacto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmContacto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmContacto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable tblContactos;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtCumpleaños;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtEmpresa;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtIdSearch;
    private javax.swing.JTextField txtNombres;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
